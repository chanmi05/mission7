plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.11'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'umc.study'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

def generated = 'src/main/generated'  // (✔️ 추가)

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath  // (✔️ 정리)
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

sourceSets {
	main {
		java {
			srcDirs += generated  // (✔️ generated 폴더 인식)
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}

// Querydsl compile task 추가 (✔️)
tasks.register('compileQuerydsl', JavaCompile) {
	group = 'build'
	description = 'Compile QueryDSL Q-types'
	source = sourceSets.main.java
	classpath = configurations.compileClasspath
	destinationDirectory.set(file(generated))
	options.annotationProcessorPath = configurations.annotationProcessor
}